
Original grammar input:

S -> C                      
C -> c C | d                
                            
Grammar after Augmentation: 
                            
S' -> . S                   
S -> . C                    
C -> . c C                  
C -> . d                    
                            
Calculated closure: I0      
                            
S' -> . S                   
S -> . C                    
C -> . c C                  
C -> . d                    
                            
States Generated:           
                            
State = I0                  
S' -> . S                   
S -> . C
C -> . c C
C -> . d

State = I1
S' -> S .

State = I2
C -> c . C
C -> . c C
C -> . d

State = I3
S -> C .

State = I4
C -> d .

State = I5
C -> c C .

Result of GOTO computation:

GOTO ( I0 , S ) = I1
GOTO ( I0 , c ) = I2
GOTO ( I0 , C ) = I3
GOTO ( I0 , d ) = I4
GOTO ( I2 , c ) = I2
GOTO ( I2 , C ) = I5
GOTO ( I2 , d ) = I4

SLR(1) parsing table:

         c       d       $       S       C

 I0      S2      S4               1       3
 I1                   Accept
 I2      S2      S4                       5
 I3                      R1
 I4                      R3
 I5                      R2

==================================================
Testing Valid Input

Parsing Input: ccd

--------------------------------------------------------------------------------
|       Step       |       Stack       |       Input       |      Action      |
--------------------------------------------------------------------------------
|1                 |0                  |ccd$               |S2                |
--------------------------------------------------------------------------------
|2                 |0 c 2              |cd$                |S2                |
--------------------------------------------------------------------------------
|3                 |0 c 2 c 2          |d$                 |S4                |
--------------------------------------------------------------------------------
|4                 |0 c 2 c 2 d 4      |$                  |R3                |
--------------------------------------------------------------------------------
|5                 |0 c 2 c 2 C 5      |$                  |R2                |
--------------------------------------------------------------------------------
|6                 |0 c 2 C 5          |$                  |R2                |
--------------------------------------------------------------------------------
|7                 |0 C 3              |$                  |R1                |
--------------------------------------------------------------------------------
|8                 |0 S 1              |$                  |Accept            |
--------------------------------------------------------------------------------

Input string 'ccd' accepted!

==================================================
Testing Invalid Input

Parsing Input: ccc

--------------------------------------------------------------------------------
|       Step       |       Stack       |       Input       |      Action      |
--------------------------------------------------------------------------------
|1                 |0                  |ccc$               |S2                |
--------------------------------------------------------------------------------
|2                 |0 c 2              |cc$                |S2                |
--------------------------------------------------------------------------------
|3                 |0 c 2 c 2          |c$                 |S2                |
--------------------------------------------------------------------------------
|4                 |0 c 2 c 2 c 2      |$                  |                  |
--------------------------------------------------------------------------------
Error: No action defined for state 2 and symbol '$'
Input string 'ccc' is not valid according to the grammar
[Finished in 0.31s]